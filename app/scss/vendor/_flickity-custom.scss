// taken from the old gallery.sass file
// meant to override flickity styles
// .flickity-carousel and .flickity-gallery-cell styling classes, not instantiated by flickity
// and have to be put in along with flickity's documented required js hooks

.flickity-carousel {
  &:hover {
    .flickity-prev-next-button,
    .flickity-prev-next-button.disabled {
      opacity: 1;
    }
  }

  .gallery-cell {
    width: 100%;
    background-size: cover;

    // temporary solution to height issues on mobile safari,
    img {
      width: 100%;
      height: 100%;
    }
  }

  .flickity-prev-next-button,
  .flickity-prev-next-button:disabled {
    @include z-index(gallery-controls);

    @include square(65px);

    border-radius: 33px;
    transition: opacity 0.2s ease, background-color 0.15s;
    margin-top: -32.5px;
    background-color: rgba(0, 0, 0, 0.3);
    transform: none;
    opacity: 0;

    svg {
      @include square(21px);

      position: absolute;
      top: 50%;
      left: 56%;
      margin-top: -8.5px;
      margin-left: -8.5px;
      transform: rotate(180deg);
    }

    // custom styling to match our svg format to that of flickity

    &.next {
      right: 25px;

      svg {
        left: 37px;
      }
    }

    &.previous {
      left: 25px;

      svg {
        left: 23px;
        top: 28px;
      }
    }

    .touch & {
      display: none;
    }

    .arrow {
      fill: color(background);
    }

    #{$focus} {
      background-color: rgba(0, 0, 0, 0.2);
    }
  }

  .flickity-page-dots {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    text-align: center;
    cursor: pointer;

    .dot {
      @include circle(8px, primary);

      @include active-opacity(0.5);

      box-shadow: 0 0 1px rgba(0, 0, 0, 0.3);
      transition: opacity 0.2s ease;
      margin: 6px;
      display: inline-block;
      background-color: rgba(0, 0, 0, 0.4);
      background-size: contain;

      &.is-selected {
        opacity: 1;
      }
    }
  }
}

// setting the min height of the flickity sliders so that it's in proportion to the
// width.  only happens on touch devices.  this ratio is taken from our current image ratios on the site.
// the subtractions from $break-small and $break-large breakpoints are to account for
// the padding on either side of the carousel at the viewports
.touch {
  .gallery-cell {
    img {
      min-height: 60vw;

      @include respond-at-and-above($break-small) {
        min-height: calc(60vw-38px);
      }


      @include respond-at-and-above($break-large) {
        min-height: calc(60vw-56px);
      }


      @include respond-at-and-above($break-xl) {
        min-height: 700px;
      }
    }
  }
}
